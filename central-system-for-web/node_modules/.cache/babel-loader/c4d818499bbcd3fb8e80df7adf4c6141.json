{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nconst hostname = 'http://localhost:8001';\nconst options = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accepts: \"application/json\"\n  }\n};\nexport const UseGet = url => {\n  _s();\n\n  const [response, setResponse] = useState();\n  const [loading, setloading] = useState(true);\n  const [error, seterror] = useState();\n  useEffect(() => {\n    setloading(true);\n    fetch(hostname + url, {\n      method: \"GET\",\n      ...options\n    }).then(response => response.json()).then(response => {\n      setResponse(response);\n      setTimeout(() => {\n        setloading(false);\n      }, 1000);\n    }).catch(error => {\n      setloading(false);\n      seterror(error);\n    });\n  }, [url]);\n  return {\n    response,\n    loading,\n    error\n  };\n};\n\n_s(UseGet, \"omjfwDOrORg/sWZlajyOlAY23W4=\");\n\n_c = UseGet;\nexport const UseGetOrganizationList = listParams => {\n  let url = \"/organization\";\n  const params = Object.keys(listParams).filter(key => listParams[key] !== undefined).reduce((prev, next) => ({ ...prev,\n    [next]: listParams[next]\n  }), {});\n  const querystring = new URLSearchParams(params).toString();\n\n  if (querystring) {\n    url = url + \"?\" + querystring;\n  }\n\n  return UseGet(url);\n};\n_c2 = UseGetOrganizationList;\nexport const UseOrganization = id => {\n  _s2();\n\n  const [response, setResponse] = useState({});\n  useEffect(() => {\n    fetch(hostname + \"/organization/\" + id, {\n      method: \"GET\",\n      ...options\n    }).then(response => response.json()).then(response => {\n      setResponse(response);\n    });\n  }, [id]);\n  return response;\n};\n\n_s2(UseOrganization, \"gFLzxIIO5XcuKpnX5lAFzqN95Ys=\");\n\n_c3 = UseOrganization;\nexport const UseCreateOrganization = () => {\n  _s3();\n\n  const [loading, setloading] = useState(false);\n  return {\n    createorganization: body => {\n      setloading(true);\n      return fetch(hostname + \"/organization/\", {\n        method: \"POST\",\n        body: JSON.stringify(body),\n        ...options\n      }).then(response => response.json()).then(response => {\n        setloading(false);\n        return response;\n      });\n    },\n    loading\n  };\n};\n\n_s3(UseCreateOrganization, \"PfjcYjxEQ2MVeY8/jvKX7eEZyyc=\");\n\n_c4 = UseCreateOrganization;\nexport const UseEditOrganization = id => {\n  _s4();\n\n  const [loading, setloading] = useState(false);\n  return {\n    editorganization: body => {\n      setloading(true);\n      return fetch(hostname + \"/organization/\" + id, {\n        method: \"PUT\",\n        body: JSON.stringify(body),\n        ...options\n      }).then(response => response.json()).then(response => {\n        setloading(false);\n        return response;\n      });\n    },\n    loading\n  };\n};\n\n_s4(UseEditOrganization, \"PfjcYjxEQ2MVeY8/jvKX7eEZyyc=\");\n\n_c5 = UseEditOrganization;\nexport const UseDeleteOrganization = id => {\n  return () => fetch(hostname + \"/organization/\" + id, {\n    method: \"DELETE\"\n  });\n};\n_c6 = UseDeleteOrganization;\nexport const UseGetChargetpointList = listParams => {\n  let url = \"/chargetpoint\";\n  const params = Object.keys(listParams).filter(key => listParams[key] !== undefined).reduce((prev, next) => ({ ...prev,\n    [next]: listParams[next]\n  }), {});\n  const querystring = new URLSearchParams(params).toString();\n\n  if (querystring) {\n    url = url + \"?\" + querystring;\n  }\n\n  return UseGet(url);\n};\n_c7 = UseGetChargetpointList;\nexport const UseChargetpoint = id => {\n  _s5();\n\n  const [response, setResponse] = useState({});\n  useEffect(() => {\n    fetch(hostname + \"/chargetpoint/\" + id, {\n      method: \"GET\",\n      ...options\n    }).then(response => response.json()).then(response => {\n      setResponse(response);\n    });\n  }, [id]);\n  return response;\n};\n\n_s5(UseChargetpoint, \"gFLzxIIO5XcuKpnX5lAFzqN95Ys=\");\n\n_c8 = UseChargetpoint;\nexport const UseCreateChargetpoint = () => {\n  _s6();\n\n  const [loading, setloading] = useState(false);\n  return {\n    createchargetpoint: body => {\n      setloading(true);\n      return fetch(hostname + \"/chargetpoint/\", {\n        method: \"POST\",\n        body: JSON.stringify(body),\n        ...options\n      }).then(response => response.json()).then(response => {\n        setloading(false);\n        return response;\n      });\n    },\n    loading\n  };\n};\n\n_s6(UseCreateChargetpoint, \"PfjcYjxEQ2MVeY8/jvKX7eEZyyc=\");\n\n_c9 = UseCreateChargetpoint;\nexport const UseEditChargetpoint = id => {\n  _s7();\n\n  const [loading, setloading] = useState(false);\n  return {\n    editchargetpoint: body => {\n      setloading(true);\n      return fetch(hostname + \"/chargetpoint/\" + id, {\n        method: \"PUT\",\n        body: JSON.stringify(body),\n        ...options\n      }).then(response => response.json()).then(response => {\n        setloading(false);\n        return response;\n      });\n    },\n    loading\n  };\n};\n\n_s7(UseEditChargetpoint, \"PfjcYjxEQ2MVeY8/jvKX7eEZyyc=\");\n\n_c10 = UseEditChargetpoint;\nexport const UseDeleteChargetpoint = id => {\n  return () => fetch(hostname + \"/chargetpoint/\" + id, {\n    method: \"DELETE\"\n  });\n};\n_c11 = UseDeleteChargetpoint;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"UseGet\");\n$RefreshReg$(_c2, \"UseGetOrganizationList\");\n$RefreshReg$(_c3, \"UseOrganization\");\n$RefreshReg$(_c4, \"UseCreateOrganization\");\n$RefreshReg$(_c5, \"UseEditOrganization\");\n$RefreshReg$(_c6, \"UseDeleteOrganization\");\n$RefreshReg$(_c7, \"UseGetChargetpointList\");\n$RefreshReg$(_c8, \"UseChargetpoint\");\n$RefreshReg$(_c9, \"UseCreateChargetpoint\");\n$RefreshReg$(_c10, \"UseEditChargetpoint\");\n$RefreshReg$(_c11, \"UseDeleteChargetpoint\");","map":{"version":3,"sources":["/app/src/hooks/api/index.js"],"names":["useEffect","useState","hostname","options","headers","Accepts","UseGet","url","response","setResponse","loading","setloading","error","seterror","fetch","method","then","json","setTimeout","catch","UseGetOrganizationList","listParams","params","Object","keys","filter","key","undefined","reduce","prev","next","querystring","URLSearchParams","toString","UseOrganization","id","UseCreateOrganization","createorganization","body","JSON","stringify","UseEditOrganization","editorganization","UseDeleteOrganization","UseGetChargetpointList","UseChargetpoint","UseCreateChargetpoint","createchargetpoint","UseEditChargetpoint","editchargetpoint","UseDeleteChargetpoint"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst hostname = 'http://localhost:8001';\n\nconst options = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accepts: \"application/json\",\n  },\n};\n\nexport const UseGet = (url) => {\n  const [response, setResponse] = useState();\n  const [loading, setloading] = useState(true);\n  const [error, seterror] = useState();\n\n  useEffect(() => {\n    setloading(true);\n    fetch(hostname + url, {\n      method: \"GET\",\n      ...options,\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        setResponse(response);\n        setTimeout(() => {\n          setloading(false);\n        }, 1000);\n      })\n      .catch((error) => {\n        setloading(false);\n        seterror(error);\n      });\n  }, [url]);\n\n  return {\n    response,\n    loading,\n    error,\n  };\n};\n\nexport const UseGetOrganizationList = (listParams) => {\n  let url = \"/organization\";\n\n  const params = Object.keys(listParams)\n    .filter((key) => listParams[key] !== undefined)\n    .reduce((prev, next) => ({ ...prev, [next]: listParams[next] }), {});\n\n  const querystring = new URLSearchParams(params).toString();\n\n  if (querystring) {\n    url = url + \"?\" + querystring;\n  }\n  return UseGet(url);\n};\n\nexport const UseOrganization = (id) => {\n  const [response, setResponse] = useState({});\n  useEffect(() => {\n    fetch(hostname + \"/organization/\" + id, {\n      method: \"GET\",\n      ...options,\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        setResponse(response);\n      });\n  }, [id]);\n\n  return response;\n};\n\nexport const UseCreateOrganization = () => {\n  const [loading, setloading] = useState(false);\n  return {\n    createorganization: (body) => {\n      setloading(true);\n      return fetch(hostname + \"/organization/\", {\n        method: \"POST\",\n        body: JSON.stringify(body),\n        ...options,\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          setloading(false);\n          return response;\n        });\n    },\n    loading,\n  };\n};\n\nexport const UseEditOrganization = (id) => {\n  const [loading, setloading] = useState(false);\n  return {\n    editorganization: (body) => {\n      setloading(true);\n      return fetch(hostname + \"/organization/\" + id, {\n        method: \"PUT\",\n        body: JSON.stringify(body),\n        ...options,\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          setloading(false);\n          return response;\n        });\n    },\n    loading,\n  };\n};\n\nexport const UseDeleteOrganization = (id) => {\n  return () =>\n    fetch(hostname + \"/organization/\" + id, {\n      method: \"DELETE\",\n    });\n};\n\nexport const UseGetChargetpointList = (listParams) => {\n  let url = \"/chargetpoint\";\n\n  const params = Object.keys(listParams)\n    .filter((key) => listParams[key] !== undefined)\n    .reduce((prev, next) => ({ ...prev, [next]: listParams[next] }), {});\n\n  const querystring = new URLSearchParams(params).toString();\n\n  if (querystring) {\n    url = url + \"?\" + querystring;\n  }\n  return UseGet(url);\n};\n\nexport const UseChargetpoint = (id) => {\n  const [response, setResponse] = useState({});\n  useEffect(() => {\n    fetch(hostname + \"/chargetpoint/\" + id, {\n      method: \"GET\",\n      ...options,\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        setResponse(response);\n      });\n  }, [id]);\n\n  return response;\n};\n\nexport const UseCreateChargetpoint = () => {\n  const [loading, setloading] = useState(false);\n  return {\n    createchargetpoint: (body) => {\n      setloading(true);\n      return fetch(hostname + \"/chargetpoint/\", {\n        method: \"POST\",\n        body: JSON.stringify(body),\n        ...options,\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          setloading(false);\n          return response;\n        });\n    },\n    loading,\n  };\n};\n\nexport const UseEditChargetpoint = (id) => {\n  const [loading, setloading] = useState(false);\n  return {\n    editchargetpoint: (body) => {\n      setloading(true);\n      return fetch(hostname + \"/chargetpoint/\" + id, {\n        method: \"PUT\",\n        body: JSON.stringify(body),\n        ...options,\n      })\n        .then((response) => response.json())\n        .then((response) => {\n          setloading(false);\n          return response;\n        });\n    },\n    loading,\n  };\n};\n\nexport const UseDeleteChargetpoint = (id) => {\n  return () =>\n    fetch(hostname + \"/chargetpoint/\" + id, {\n      method: \"DELETE\",\n    });\n};\n"]},"metadata":{},"sourceType":"module"}